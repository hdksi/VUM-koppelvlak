.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  before_script:
    - mkdir -p .go
    - go install github.com/mbrukman/yaml2json/cmd/yaml2json@latest
    - export PATH=.go/bin/:$PATH
  cache:
    paths:
      - .go/pkg/mod/
      - .go/src/github.com/

stages:
  - validate
  - deploy


lint:
  stage: validate
  image: golang:1.17
  extends: .go-cache
  script:
    - |
      for F in ./OAS_Contracten/*.yaml; do
        json_file_path=$(echo $F | sed "s/.yaml/.json/");
        yaml2json $F > $json_file_path;
      done;
      git diff --text --exit-code HEAD || (echo "You should probably run make tojson" && exit 1)
      git add ./OAS_Contracten/\*.json
      git config user.email "${GITLAB_USER_EMAIL}"
      git config user.name "${GITLAB_USER_NAME}"
      git commit -m "Generate new/updated contracts in json format" || echo "No changes to commit"
      git remote set-url origin https://${GL_USERNAME}:${GL_PASSWORD}@$CI_SERVER_HOST/$CI_PROJECT_PATH
      git push origin HEAD:$CI_COMMIT_REF_NAME

deploy_test:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
  environment:
    name: test
  script:
    - |
      echo "deployed"


deploy_accept:
  extends: deploy_test
  when: manual
  rules:
    - if: '$CI_COMMIT_TAG =~ /v\d+\.\d+\.\d+.*/'
  environment:
    name: accept

deploy_prod:
  extends: deploy_accept
  rules:
    - if: '$CI_COMMIT_TAG =~ /v\d+\.\d+\.\d+.*/'
  environment:
    name: prod